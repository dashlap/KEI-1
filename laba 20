#include <stdio.h>
#include <Windows.h>
#define _CRT_SECURE_NO_WARNINGS
#define MAX_N 8
#define MAX_M 10

int arr[MAX_N][MAX_M] = {
	{10, 11, 12, 13},
	{20, 21, 22, 23},
	{30, 31, 32, 33}
};
int n = 3;
int m = 4;

void print() {
	printf("!!!! print() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			printf("%3d ", arr[i][j]);
		}
		printf("\n");
	}
}
void fillix10() {
	printf("!!!! fillix10() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = i * 10 + j;
			printf("%3d ", arr[i][j]);
		}
		printf("\n");
	}
}
void fillZero() {
	printf("!!!! fillZero() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = 0;
			printf("%3d ", arr[i][j]);
		}
		printf("\n");
	}
}

void randFill0_9() {
	printf("!!!! randFill0_9() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = rand() % 10;
			printf("%3d ", arr[i][j]);
		}
		printf("\n");
	}
}
void fillnechx10() {
	printf("!!!! fillnechx10() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] % 2 == 1) {
				arr[i][j] = arr[i][j] * 10;
				printf("%3d ", arr[i][j]);
			}
		}
		printf("\n");
	}
}
void fillreduce10() {
	printf("!!!! fillreduce10() !!!!\n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] % 10 == 1) {
				arr[i][j] = arr[i][j] / 10;
				printf("%3d ", arr[i][j]);
			}
		}
		printf("\n");
	}
}
void fillme() {
	//
}

void save() {
	FILE* fout = fopen("c:\\LB20\\arr1.txt", "wt");
	if (fout == NULL) {
		printf("Выходной файл не создался");
		return;
	}
	fprintf(fout, "%d ", n);
	fprintf(fout, "%d\n ", m);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			fprintf(fout, "%3d ", arr[i][j]);
		}
		fprintf(fout, "\n");
	}
	fclose(fout);

}
void load() {
	FILE* fin = fopen("c:\\LB20\\arr1.txt", "rt");
	if (fin == NULL) {
		printf("Входной файл не найден");
		return;
	}

	fscanf_s(fin, "%d", &n);
	fscanf_s(fin, "%d", &m);
	printf("!!!! load() !!!! \n");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			fscanf_s(fin, "%d", &arr[i][j]);
			printf("%3d ", arr[i][j]);
		}
		printf("\n");
	}

	fclose(fin);

}
void deleteRow(int delRow) {
	printf("!!!! deleteRow(%d) !!!!\n", delRow);
	for (int i = delRow; i < n - 1; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = arr[i + 1][j];
		}
	}
	n--;
}
void maina() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	print();
	int num;
	printf("Номер строки, которую нужно удалить: ");
	scanf_s("%d", &num);
	deleteRow(num);
	print();
}
void addedRow(int addRow) {
	printf("!!!! addedRow(%d) !!!!\n", addRow);
	for (int i = addRow; i < n + 1; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = arr[i + 1][j];
		}
	}
	n++;
}
void maina1() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	print();
	int num;
	printf("Номер строки, которую нужно продублировать: ");
	scanf_s("%d", &num);
	addedRow(num);
	print();
}
void main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	print();
	int item;
	do {
		printf("========================================\n");
		printf("Выберите нужную вам операцию: \n");
		printf("1: заполнить значениями i * 10 + j \n");
		printf("2: заполнить нулями \n");
		printf("3: заполнить случайными значениями \n");
		printf("4: все нечётные увеличить в 10 раз \n");
		printf("5: все кратные 10 уменьшить в 10 раз \n");
		printf("6: ввод массива с клавиатуры \n");
		printf("7: сохранение массива в файл \n");
		printf("8: загрузка массива из файла \n");
		printf("9: удаление строки массива \n");
		printf("10: продублировать строку массива \n");
		printf(" \n");
		printf("-1: Выйти из программы \n");
		printf("Выбранная операция >>>>>>>> ");
		scanf_s("%d", &item);

		switch (item) {
		case 1:
			fillix10();
			break;
		case 2:
			fillZero();
			break;
		case 3:
			randFill0_9();
			break;
		case 4:
			fillnechx10();
			break;
		case 5:
			fillreduce10();
			break;
		case 6:
			fillme();
			break;
		case 7:
			save();
			break;
		case 8:
			load();
			break;
		case 9:
			maina();
			break;
		case 10:
			maina1();
			break;
		}
	} while (item != -1);
}
