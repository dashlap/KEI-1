#5-10
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<Windows.h>

#define MAX_N 100
#define MAX_M 100

int arr[MAX_N][MAX_M];

int n;
int m;

void print() {

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			printf("%3d", arr[i][j]);
		}
		printf("\n");
	}
}
void Input() {
	printf("Введите количество строчек ");
	scanf_s("%d", &n);
	printf("Введите количество столбцов: ");
	scanf_s("%d", &m);
	printf("Введите значения массива: ");
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf_s("%d", &arr[i][j]);
		}
		printf("\n");
	}
}
void Save() {
	FILE* fout = fopen("status.txt", "wt");
	if (fout == NULL) {
		printf("Файл не найден");
		return;
	}

	fprintf(fout, "%d ", n);
	fprintf(fout, "%d\n", m);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			fprintf(fout, "%d ", arr[i][j]);
		}
		fprintf(fout, "\n");
	}

	fclose(fout);
}
void Load() {

	FILE* fin = fopen("status.txt", "rt");
	if (fin == NULL) {
		printf("Файл не найден");
		return;
	}

	fscanf(fin, "%d", &n);
	fscanf(fin, "%d", &m);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			fscanf(fin, "%d", &arr[i][j]);
		}
	}

	fclose(fin);
}
void deleteRow(int delRow) {
	for (int i = delRow; i < n - 1; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = arr[i + 1][j];
		}
	}
	n--;
}
int findMin() {

	int min = arr[0][0];
	int iMin = 0;
	int jMin = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] < min) {
				min = arr[i][j];
				iMin = i;
				jMin = j;
			}
		}
	}
	return min;
}
int findMax() {

	int max = arr[0][0];
	int iMax = 0;
	int jMax = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] > max) {
				max = arr[i][j];
				iMax = i;
				jMax = j;
			}
		}
	}
	return max;
}
void А4() {
	float min = findMin();
	float Max = findMax();
	printf("Min: %d\n", findMin());
	printf("Max: %d\n", findMax());

	int max = arr[0][0];
	int iMax = 0;
	int jMax = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] > max) {
				max = arr[i][j];
				iMax = i;
				jMax = j;
			}
		}
	}
	int Min = arr[0][0];
	int iMin = 0;
	int jMin = 0;
	for (int i1 = 0; i1 < n; i1++) {
		for (int j1 = 0; j1 < m; j1++) {
			if (arr[i1][j1] < Min) {
				Min = arr[i1][j1];
				iMin = i1;
				jMin = j1;
			}
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] % 2 == 1) {
				if (i > iMin && j < jMax) {
					arr[i][j] = 0;
				}
			}
		}
	}
}
void B3() {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] == 0) {
				deleteRow(i);
			}
		}
	}
}
void main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	int n;
	do {
		print();
		printf("\n");
		printf("Выберите нужную вам операцию:\n");
		printf("5: Ввести массив с клавиатуры\n");
		printf("6: Сохранить состояние массива\n");
		printf("7: Загрузить состояние массива\n");
		printf("8: Удалить заданную строку\n");
		printf("9: В массиве все нечетные элементы, стоящие ниже минимального элемента массива и стоящие слева от максимального элемента массива, заменить на 0.\n");
		printf("10: Удалить те строки, в которых встречаются нулевые элементы.\n");
		printf("\n");
		printf("-1: Выйти из программы\n");

		scanf_s("%d", &n);

		switch (n) {

		case 5:
			Input();
			break;
		case 6:
			Save();
			break;
		case 7:
			Load();
			break;
		case 8:
			int n;
			printf("Номер удаляемой строки - ");
			scanf_s("%d", &n);
			deleteRow(n);
			break;
		case 9:
			А4();
			break;
		case 10:
		{
			int i = 0;
			while (i < 2) {
				B3();
				i++;
			}
		}
		break;
		}

	} while (n != -1);
}
